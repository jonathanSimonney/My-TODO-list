function createElementWithClass(tagName,arrayClassname){    var createdElement = document.createElement(tagName);    for (var i in arrayClassname){        createdElement.className += arrayClassname[i]+' ';    }    return createdElement;}function suppressElementsBySelector(suppressSelector){    var arrayToSuppress = document.querySelectorAll(suppressSelector);    for (var i in arrayToSuppress){        if (typeof arrayToSuppress[i].style !== 'undefined'){            arrayToSuppress[i].parentNode.removeChild(arrayToSuppress[i]);        }    }}//To suppress a list of elements with the corresponding CSS selectorfunction formatString(string,isName = true){    if (string === '' && isName) {        string = '<span class="placeholder">Click here to add a name</span>';//change class if another is preferred by Antoine.    }else{        string = string.replace('&','&amp;');        string = string.replace('<','&lt;');    }    return string;}//To format the name of a fieldfunction addCloseButton(elementToAppend,action = 'suppress'){    var buttonClose = createElementWithClass('span', ['closeButton']);    buttonClose.innerHTML = 'x';    elementToAppend.appendChild(buttonClose);    buttonClose.onclick = function(){        if (action === 'suppress'){            elementToAppend.parentNode.removeChild(elementToAppend);        }else{            elementToAppend.className = elementToAppend.className.replace(' fullScreen','');            suppressElementsBySelector('.modificationForm');        }    };    return buttonClose;}function appendChilds(father, arrayChild){    for (var i in arrayChild){        father.appendChild(arrayChild[i]);    }}//Some functions called by openFormRename// and addColumn.function openFormModif(modified,arrayColumnPath){//WARNING!!! DO NOT CALL THIS FUNCTION WITH ARRAYCOLUMNPATH AS USER INPUT                                                 // : IT IS USED IN AN EVAL STATEMENT    if (modified.innerHTML.search('<form') === -1){        var classNameModifForm = 'modificationForm';//As usual, give classname according to what Antoine needs.        suppressElementsBySelector('.'+classNameModifForm);        if (modified.className.search('positioned') === -1){            modified.className += ' positioned';//TODO!!! suppress if Antoine doesn't need it to position close button        }        var formModif = document.createElement('form');        formModif.className = classNameModifForm;        modified.appendChild(formModif);        formModif.innerHTML = '<input type="text" id="newContent" placeholder="type your new name here"><input type="submit">';        document.getElementById('newContent').focus();        document.querySelector('.'+classNameModifForm).onsubmit  = function() {            var newContent = document.getElementById('newContent').value;            eval('arrayColumn'+arrayColumnPath+'= newContent');            newContent = formatString(newContent);            modified.innerHTML = newContent;            localStorage['content'] = JSON.stringify(arrayColumn);            return false;        };        addCloseButton(formModif);    }}//open a form to rename a field//beginning of functions to add a cardfunction createElementsForCard(column) {    var newCard = createElementWithClass('div',['card']);//TODO! change style(div.box became div.card)    //TODO give this box the good innerhtml.    var cardTitle = createElementWithClass('h2',['cardTitle']);    var columnTitle = createElementWithClass('h3',['title', 'onlyFullScreen']);    columnTitle.innerHTML = formatString(arrayColumn[column['number']]['name']);    var description = createElementWithClass('p', ['boxDescription', 'onlyFullScreen']);    description.innerHTML = '<span class="placeholder">This box currently doesn\'t have any description.</span> ';    return {'domElement' : newCard, 'title' : cardTitle, 'columnName' : columnTitle, 'description': description};}function linkCardOnclickEvent(card, column){    card['elements']['domElement'].addEventListener('click',function () {        if (this.className.search('fullScreen') === -1){            this.className += ' fullScreen';        }    }, true);    var buttonClose = addCloseButton(card['elements']['domElement'],'reduce');    card['elements']['title'].onclick = function () {        openFormModif(this,'['+column['number']+']["content"]['+card['number']+']');    };    buttonClose.className+= ' onlyFullScreen';}//end of functions for adding cardsfunction addCard(column,cardNumber) {//TODO : if column number is only used to get columnName, pass columnName as argument    var card = {};    card['elements'] = createElementsForCard(column);    card['number'] = cardNumber;    var containerBox = column['elements']['container'];    //we created the var    appendChilds(card['elements']['domElement'], [card['elements']['title'],card['elements']['columnName'], card['elements']['description']]);    containerBox.appendChild(card['elements']['domElement']);    linkCardOnclickEvent(card,column);    return card;}//CARD CREATIONfunction createElements(columnName){    var column = createElementWithClass('div', ['column']);    var title = createElementWithClass('h3', ['title']);    columnName = formatString(columnName);    title.innerHTML = columnName;    var container = createElementWithClass('div', ['containerCard']);    var button = createElementWithClass('input', ['addBox']);    button.type = 'button';    button.value = 'add a box';    return {'domElement' : column, 'title' : title, 'container' : container, 'button': button};}function displayElements(elements){    appendChilds(elements['domElement'],[elements['title'],elements['container'],elements['button']]);    document.querySelector('.shelf').appendChild(elements['domElement']);}function createNewCard(column){    arrayColumn[column['number']]['content'].push({'title' : '', 'description': ''});    localStorage['content'] = JSON.stringify(arrayColumn);    //we update local storage    var card = addCard(column,arrayColumn[column['number']]['content'].length -1);    card['elements']['domElement'].className += ' fullScreen';    openFormModif(card['elements']['title'], '['+column['number']+']["content"]['+(arrayColumn[column['number']]['content'].length -1)+']["title"]');}function linkColumnOnclickEvent(column) {    column['elements']['title'].addEventListener('click',function () {        openFormModif(this,'['+column['number']+'][\'name\']');    }, true);    column['elements']['button'].onclick = function () {        createNewCard(column);    };}//functions for column creationfunction addColumn(columnName,columnNumber) {//possibly to be changed if Antoine prefers another selector.    var column = {};    column['elements'] = createElements(columnName);    displayElements(column['elements']);    column['number'] = columnNumber;    //we link to each column its unique id, the corresponding domElement and an array of the elements into this column    linkColumnOnclickEvent(column);    return column;}//END OF COLUMN CREATIONfunction displayContent(arrayColumn) {//TODO!!! IMPORTANT! Implement this function so it shows the page as it was left.    for (var i in arrayColumn){        var column = addColumn(arrayColumn[i]['name'],i);        for (var j in arrayColumn[column['number']]['content']){            addCard(column,j);        }    }}var arrayColumn = [];window.onload = function(){    if (typeof localStorage['content'] !== 'undefined'){        if (typeof JSON.parse(localStorage['content']) === 'object'){            arrayColumn = JSON.parse(localStorage['content']);            console.log(arrayColumn);            displayContent(arrayColumn);        }    }    //We display the content with what was stocked in the local storage.    var addAColumn = document.getElementById('addColumn');    addAColumn.onclick = function(){        var name = document.getElementById('columnName').value;        arrayColumn.push({'name': name, 'content': []});        localStorage['content'] = JSON.stringify(arrayColumn);        addColumn(name,arrayColumn.length -1);        document.getElementById('columnName').value = '';    }};