function createElementWithClass(tagName,arrayClassname){    var createdElement = document.createElement(tagName);    for (var i in arrayClassname){        createdElement.className += arrayClassname[i]+' ';    }    return createdElement;}function suppressElementsBySelector(suppressSelector){    var arrayToSuppress = document.querySelectorAll(suppressSelector);    for (var i in arrayToSuppress){        if (typeof arrayToSuppress[i].style !== 'undefined'){            arrayToSuppress[i].parentNode.removeChild(arrayToSuppress[i]);        }    }}//To suppress a list of elements with the corresponding CSS selectorfunction formatString(string,isName){    if (string === '' && isName) {        string = '<span class="placeholder">Click here to add a name</span>';//change class if another is preferred by Antoine.    }else{        string = string.replace('&','&amp;');        string = string.replace('<','&lt;');    }    return string;}//To format the name of a field//Some functions called by openFormRename// and addColumn.function openFormModif(modified,arrayColumnPath){//WARNING!!! DO NOT CALL THIS FUNCTION WITH ARRAYCOLUMNPATH AS USER INPUT                                                 // : IT IS USED IN AN EVAL STATEMENT    var classNameModifForm = 'modificationForm';//As usual, give classname according to what Antoine needs.    suppressElementsBySelector('.'+classNameModifForm);    modified.className += ' positioned';//TODO!!! suppress if Antoine doesn't need it to position close button    var formModif = document.createElement('form');    formModif.className = classNameModifForm;    modified.appendChild(formModif);    formModif.innerHTML = '<input type="text" id="newContent" placeholder="type your new name here"><input type="submit">' +        '<span id="closeButton">x</span>';    document.getElementById('newContent').focus();    document.querySelector('.'+classNameModifForm).onsubmit  = function() {        var newContent = document.getElementById('newContent').value;        eval('arrayColumn'+arrayColumnPath+'= newContent');        newContent = formatString(newContent);        modified.innerHTML = newContent;        localStorage['content'] = JSON.stringify(arrayColumn);        return false;    }    document.querySelector('#closeButton').onclick = function () {        suppressElementsBySelector('.'+classNameModifForm);    }}//open a form to rename a fieldfunction addBox(arrayColumnChild,columnNumber) {    for (var i in arrayColumnChild){        if (arrayColumnChild[i].className.search('containerBox') !== -1){            var containerBox = arrayColumnChild[i];            break;        }    }    var newBox = createElementWithClass('div',['box']);    //TODO give this box the good innerhtml.    newBox.innerHTML = '';    containerBox.appendChild(newBox);    newBox.onclick = function () {        this.className += ' fullScreen';    }}function addColumn(columnName,columnNumber) {//possibly to be changed if Antoine prefers another selector.    var newColumn = createElementWithClass('div', ['column']);    var newTitle = createElementWithClass('h3', ['title']);    var newContainer = createElementWithClass('div', ['containerBox']);    var newButton = createElementWithClass('input', ['addBox']);    newButton.type = 'button';    newButton.value = 'add a box';    columnName = formatString(columnName);    newTitle.innerHTML = columnName;    newColumn.appendChild(newTitle);    newColumn.appendChild(newContainer);    newColumn.appendChild(newButton);    document.querySelector('.shelf').appendChild(newColumn);    for (var i in arrayColumn[columnNumber]['content']){        addBox(newColumn.childNodes,columnNumber);    }    //we give back to this column all the boxes she had, after the whole column has been created.    newTitle.addEventListener('click',function () {        if (this.innerHTML.search('<form') === -1) {            openFormModif(this,'['+columnNumber+'][\'name\']');        }    }, true);    newButton.onclick = function () {        arrayColumn[columnNumber]['content'].push({'title' : '', 'description': ''});        localStorage['content'] = JSON.stringify(arrayColumn);        //First, we put the change in the localStorage        addBox(this.parentNode.childNodes,columnNumber);        //And then, we add in the HTML the box.    }}function displayContent(arrayColumn) {//IMPORTANT! Implement this function so it shows the page as it was left.    for (var i in arrayColumn){        addColumn(arrayColumn[i]['name'],i);    }}var arrayColumn = [];window.onload = function(){    if (typeof localStorage['content'] !== 'undefined'){        if (typeof JSON.parse(localStorage['content']) === 'object'){            arrayColumn = JSON.parse(localStorage['content']);            console.log(arrayColumn);            displayContent(arrayColumn);        }    }    //We display the content with what was stocked in the local storage.    var addAColumn = document.getElementById('addColumn');    addAColumn.onclick = function(){        var name = document.getElementById('columnName').value;        arrayColumn.push({'name': name, 'content': []});        localStorage['content'] = JSON.stringify(arrayColumn);        addColumn(name,arrayColumn.length -1);    }};